<launch>
  <arg name="dataset_name" value="ERL"/>

  <!-- allow for different sensor calibrations -->
  <arg name="sensor_config_path" default="$(find kimera_vio)/params"/>
  <arg name="sensor_config_name" default="$(arg dataset_name)"/>
  <arg name="sensor_folder" value="$(arg sensor_config_path)/$(arg sensor_config_name)"/>

  <arg name="online" default="true" />
  <arg name="do_coarse_temporal_sync" default="false"/>
  <arg name="do_fine_temporal_sync" default="false"/>

  <arg name="log_output" default="false"/>
  <arg name="log_output_path"
       default="$(find kimera_vio_ros)/output_logs/"
       if="$(arg log_output)"/>
  <arg name="log_gt_data" default="false"/>
  <arg name="gt_topic" default=""/>
  <!-- Set use_sim_time to true if you use rosbag with clock argument -->
  <arg name="should_use_sim_time" default="false"/>

  <!-- Only used when parsing a rosbag -->
  <arg name="rosbag_path" default="default.bag"
       unless="$(arg online)"/>

  <!-- Frame IDs. These DO NOT match frame id's on the video streams, as the
	RealSense and Kimera publish conflicting Tf's -->
  <arg name="odom_frame_id"      value="odom"/>
  <arg name="base_link_frame_id" value="$(optenv ROBOT_NAMESPACE)/imu_base_link"/>
  <arg name="map_frame_id"       value="map"/>
  <arg name="left_cam_frame_id"  value="$(optenv ROBOT_NAMESPACE)/left_cam_frame"/>
  <arg name="right_cam_frame_id" value="$(optenv ROBOT_NAMESPACE)/right_cam_frame"/>

  <!-- Subscribed Topics -->
  <arg name="left_cam_topic"  value="/$(optenv ROBOT_NAMESPACE)/camera/infra1/image_rect_raw"/>
  <arg name="right_cam_topic" value="/$(optenv ROBOT_NAMESPACE)/camera/infra2/image_rect_raw"/>
  <arg name="imu_topic"       value="/$(optenv ROBOT_NAMESPACE)/camera/imu"/>
  
  <!-- External Odom -->
  <arg name="use_external_odom" value="true"/>
  <arg name="external_odom_topic" value="/$(optenv ROBOT_NAMESPACE)/jackal_velocity_controller/odom"/>

  <!-- Launch actual pipeline -->
  <include file="$(find kimera_vio_ros)/launch/kimera_vio_ros.launch"
           pass_all_args="true"/>

 <!-- Launch static TF node from base_link to velo_link -->
 <node pkg="tf" type="static_transform_publisher" name="velo_link_broadcaster"
   args="0 0 0 0 0 0 1 $(arg base_link_frame_id) velo_link 100"/>

 <!-- since the imu is required to be the base_link_frame, add imu to your desired base link here. this is the transformation from the frame the imu readings are published in to the robot base link -->
 <node pkg="tf2_ros" type="static_transform_publisher" name="imu_to_base_broadcaster" args="0.01728 -0.195849 -0.19873 -0.5 -0.5 -0.5 0.5 $(arg base_link_frame_id) $(optenv ROBOT_NAMESPACE)/base_link" />
 
</launch>
